{"title":"BZOJ1001","slug":"BZOJ1001","date":"2018-12-27T13:45:36.000Z","updated":"2018-12-27T13:48:32.927Z","comments":true,"excerpt":"","content":"<p>1001: [BeiJing2006]狼抓兔子</p>\n<p>Time Limit: 15 Sec  Memory Limit: 162 MB</p>\n<p>Description</p>\n<p>现在小朋友们最喜欢的”喜羊羊与灰太狼”,话说灰太狼抓羊不到，但抓兔子还是比较在行的，</p>\n<p>而且现在的兔子还比较笨，它们只有两个窝，现在你做为狼王，面对下面这样一个网格的地形：</p>\n<p> <img src=\"https://www.lydsy.com/JudgeOnline/images/1001.jpg\" alt=\"Alt text\"></p>\n<p>左上角点为(1,1),右下角点为(N,M)(上图中N=4,M=5).有以下三种类型的道路 </p>\n<p>1:(x,y)&lt;==&gt;(x+1,y) </p>\n<p>2:(x,y)&lt;==&gt;(x,y+1) </p>\n<p>3:(x,y)&lt;==&gt;(x+1,y+1) </p>\n<p>道路上的权值表示这条路上最多能够通过的兔子数，道路是无向的. 左上角和右下角为兔子的两个窝，<br>开始时所有的兔子都聚集在左上角(1,1)的窝里，现在它们要跑到右下解(N,M)的窝中去，狼王开始伏击<br>这些兔子.当然为了保险起见，如果一条道路上最多通过的兔子数为K，狼王需要安排同样数量的K只狼，<br>才能完全封锁这条道路，你需要帮助狼王安排一个伏击方案，使得在将兔子一网打尽的前提下，参与的<br>狼的数量要最小。因为狼还要去找喜羊羊麻烦.</p>\n<p>Input</p>\n<p>第一行为N,M.表示网格的大小，N,M均小于等于1000.</p>\n<p>接下来分三部分</p>\n<p>第一部分共N行，每行M-1个数，表示横向道路的权值. </p>\n<p>第二部分共N-1行，每行M个数，表示纵向道路的权值. </p>\n<p>第三部分共N-1行，每行M-1个数，表示斜向道路的权值. </p>\n<p>输入文件保证不超过10M</p>\n<p>Output</p>\n<p>输出一个整数，表示参与伏击的狼的最小数量.</p>\n<p>Sample Input</p>\n<p>3 4</p>\n<p>5 6 4</p>\n<p>4 3 1</p>\n<p>7 5 3</p>\n<p>5 6 7 8</p>\n<p>8 7 6 5</p>\n<p>5 5 5</p>\n<p>6 6 6</p>\n<p>Sample Output</p>\n<p>14 </p>\n<p>题目大意：求网格图的最大流。</p>\n<p>题解：最大流=最小割，而平面图的最小割可以把原图转化为对偶图，然后利用最短路解决。注意前提必须是平面图。</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**************************************************************</span></span><br><span class=\"line\"><span class=\"comment\">    Problem: 1001</span></span><br><span class=\"line\"><span class=\"comment\">    User: MekakuCityActors</span></span><br><span class=\"line\"><span class=\"comment\">    Language: C++</span></span><br><span class=\"line\"><span class=\"comment\">    Result: Accepted</span></span><br><span class=\"line\"><span class=\"comment\">    Time:940 ms</span></span><br><span class=\"line\"><span class=\"comment\">    Memory:143480 kb</span></span><br><span class=\"line\"><span class=\"comment\">****************************************************************/</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;cstring&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;cstdio&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;queue&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;map&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;string&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bitset&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;cmath&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> ll;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">edge</span>&#123;</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> x;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> y;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> val;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> nex;</span><br><span class=\"line\">&#125;e[<span class=\"number\">6000005</span>];</span><br><span class=\"line\"><span class=\"keyword\">int</span> cnt,head[<span class=\"number\">6200005</span>],dist[<span class=\"number\">6200005</span>],n,m;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">adde</span><span class=\"params\">(<span class=\"keyword\">int</span> X,<span class=\"keyword\">int</span> Y,<span class=\"keyword\">int</span> Z)</span></span>&#123;</span><br><span class=\"line\">    e[cnt].x=X;</span><br><span class=\"line\">    e[cnt].y=Y;</span><br><span class=\"line\">    e[cnt].val=Z;</span><br><span class=\"line\">    e[cnt].nex=head[X];</span><br><span class=\"line\">    head[X]=cnt++;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">pot</span>&#123;</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> x;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> val;</span><br><span class=\"line\">    <span class=\"keyword\">bool</span> <span class=\"keyword\">operator</span>&lt;(<span class=\"keyword\">const</span> struct pot &amp;aa)<span class=\"keyword\">const</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> val&gt;aa.val;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">dij</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">memset</span>(dist,<span class=\"number\">0x3f3f3f3f</span>,<span class=\"keyword\">sizeof</span>(dist));</span><br><span class=\"line\">    dist[<span class=\"number\">1</span>]=<span class=\"number\">0</span>;</span><br><span class=\"line\">    priority_queue&lt;<span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">pot</span>&gt;<span class=\"title\">pq</span>;</span></span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">pot</span> <span class=\"title\">p0</span>;</span></span><br><span class=\"line\">    p0.x=<span class=\"number\">1</span>;</span><br><span class=\"line\">    p0.val=<span class=\"number\">0</span>;</span><br><span class=\"line\">    pq.push(p0);</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(!pq.empty())&#123;</span><br><span class=\"line\">        <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">pot</span> <span class=\"title\">b0</span>=<span class=\"title\">pq</span>.<span class=\"title\">top</span>();</span>pq.pop();</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(b0.x==<span class=\"number\">2</span>*(n<span class=\"number\">-1</span>)*(m<span class=\"number\">-1</span>)+<span class=\"number\">2</span>)<span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(dist[b0.x]&lt;b0.val)<span class=\"keyword\">continue</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=head[b0.x];i!=<span class=\"number\">-1</span>;i=e[i].nex)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> v=e[i].y;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(dist[v]&gt;dist[b0.x]+e[i].val)&#123;</span><br><span class=\"line\">                dist[v]=dist[b0.x]+e[i].val;</span><br><span class=\"line\">                <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">pot</span> <span class=\"title\">c0</span>;</span></span><br><span class=\"line\">                c0.x=v;</span><br><span class=\"line\">                c0.val=dist[v];</span><br><span class=\"line\">                pq.push(c0);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">   <span class=\"comment\">//freopen(\"in.txt\",\"r\",stdin);</span></span><br><span class=\"line\">    <span class=\"built_in\">cin</span>&gt;&gt;n&gt;&gt;m;</span><br><span class=\"line\">    <span class=\"built_in\">memset</span>(head,<span class=\"number\">-1</span>,<span class=\"keyword\">sizeof</span>(head));</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;m<span class=\"number\">-1</span>;j++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> a;</span><br><span class=\"line\">            <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;a);</span><br><span class=\"line\">            <span class=\"keyword\">int</span> x=<span class=\"number\">2</span>*(n<span class=\"number\">-1</span>)*(m<span class=\"number\">-1</span>)+<span class=\"number\">2</span><span class=\"number\">-2</span>*(m<span class=\"number\">-1</span>)*i+j*<span class=\"number\">2</span>;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(i==<span class=\"number\">0</span>)x=<span class=\"number\">2</span>*(n<span class=\"number\">-1</span>)*(m<span class=\"number\">-1</span>)+<span class=\"number\">2</span>;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> y=<span class=\"number\">2</span>*(n<span class=\"number\">-1</span>)*(m<span class=\"number\">-1</span>)+<span class=\"number\">2</span><span class=\"number\">-2</span>*(m<span class=\"number\">-1</span>)*i+j*<span class=\"number\">2</span><span class=\"number\">-2</span>*m+<span class=\"number\">3</span>;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(i==n<span class=\"number\">-1</span>)y=<span class=\"number\">1</span>;</span><br><span class=\"line\">            adde(x,y,a);</span><br><span class=\"line\">            adde(y,x,a);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n<span class=\"number\">-1</span>;i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;m;j++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> a;</span><br><span class=\"line\">            <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;a);</span><br><span class=\"line\">            <span class=\"keyword\">int</span> x=<span class=\"number\">2</span>*(n<span class=\"number\">-1</span>)*(m<span class=\"number\">-1</span>)+<span class=\"number\">2</span><span class=\"number\">-2</span>*(m<span class=\"number\">-1</span>)*i+j*<span class=\"number\">2</span>;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(j==m<span class=\"number\">-1</span>)x=<span class=\"number\">2</span>*(n<span class=\"number\">-1</span>)*(m<span class=\"number\">-1</span>)+<span class=\"number\">2</span>;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> y=<span class=\"number\">2</span>*(n<span class=\"number\">-1</span>)*(m<span class=\"number\">-1</span>)+<span class=\"number\">2</span><span class=\"number\">-2</span>*(m<span class=\"number\">-1</span>)*i+j*<span class=\"number\">2</span><span class=\"number\">-1</span>;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(j==<span class=\"number\">0</span>)y=<span class=\"number\">1</span>;</span><br><span class=\"line\">            adde(x,y,a);</span><br><span class=\"line\">            adde(y,x,a);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n<span class=\"number\">-1</span>;i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;m<span class=\"number\">-1</span>;j++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> a;</span><br><span class=\"line\">            <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;a);</span><br><span class=\"line\">            <span class=\"keyword\">int</span> x=<span class=\"number\">2</span>*(n<span class=\"number\">-1</span>)*(m<span class=\"number\">-1</span>)+<span class=\"number\">2</span><span class=\"number\">-2</span>*(m<span class=\"number\">-1</span>)*i+j*<span class=\"number\">2</span>;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> y=x+<span class=\"number\">1</span>;</span><br><span class=\"line\">            adde(x,y,a);</span><br><span class=\"line\">            adde(y,x,a);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(n==<span class=\"number\">1</span>&amp;&amp;m==<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">\"0\\n\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        dij();</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">\"%d\\n\"</span>,dist[<span class=\"number\">2</span>*(n<span class=\"number\">-1</span>)*(m<span class=\"number\">-1</span>)+<span class=\"number\">2</span>]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>Edit By <a href=\"http://mahua.jser.me\" target=\"_blank\" rel=\"noopener\">MaHua</a></p>\n","categories":[],"tags":[]}