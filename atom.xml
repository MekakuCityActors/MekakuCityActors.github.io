<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>MekakuCityActors&#39;s blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-02-22T03:02:59.919Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>MekakuCityActors</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title></title>
    <link href="http://yoursite.com/2019/02/22/%E7%82%B9%E5%88%86%E6%B2%BB/"/>
    <id>http://yoursite.com/2019/02/22/点分治/</id>
    <published>2019-02-22T03:02:29.138Z</published>
    <updated>2019-02-22T03:02:59.919Z</updated>
    
    <content type="html"><![CDATA[<p>两道点分治的板子题</p><p><a href="https://www.luogu.org/problemnew/show/P3806" target="_blank" rel="noopener">P3806 【模板】点分治1</a></p><p>题目描述</p><p>给定一棵有n个点的树</p><p>询问树上距离为k的点对是否存在。</p><p>输入输出格式</p><p>输入格式：<br>n,m 接下来n-1条边a,b,c描述a到b有一条长度为c的路径</p><p>接下来m行每行询问一个K</p><p>输出格式：<br>对于每个K每行输出一个答案，存在输出“AYE”,否则输出”NAY”(不包含引号)</p><p>输入输出样例</p><p>输入样例#1： </p><p>2 1</p><p>1 2 2</p><p>2</p><p>输出样例#1： </p><p>AYE</p><p>说明</p><p>对于30%的数据n&lt;=100</p><p>对于60%的数据n&lt;=1000,m&lt;=50</p><p>对于100%的数据n&lt;=10000,m&lt;=100,c&lt;=1000,K&lt;=10000000</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">edge</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> next,to,w;</span><br><span class="line">&#125;edge;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF=<span class="number">1000000000</span>;</span><br><span class="line">edge e[<span class="number">20010</span>];</span><br><span class="line"><span class="keyword">int</span> n,m,et,head[<span class="number">10010</span>],siz[<span class="number">10010</span>],vis[<span class="number">10010</span>],maxs[<span class="number">10010</span>],ans[<span class="number">110</span>],q[<span class="number">110</span>],w[<span class="number">10000010</span>],root;</span><br><span class="line"><span class="built_in">stack</span>&lt;<span class="keyword">int</span>&gt; s,cur;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> num=<span class="number">0</span>,k=<span class="number">1</span>; <span class="keyword">char</span> c=getchar();</span><br><span class="line">    <span class="keyword">while</span>(c&gt;<span class="string">'9'</span> || c&lt;<span class="string">'0'</span>) k=(c==<span class="string">'-'</span>)?<span class="number">0</span>:k,c=getchar();</span><br><span class="line">    <span class="keyword">while</span>(c&gt;=<span class="string">'0'</span> &amp;&amp; c&lt;=<span class="string">'9'</span>) num=num*<span class="number">10</span>+c-<span class="string">'0'</span>,c=getchar();</span><br><span class="line">    <span class="keyword">return</span> k?num:-num;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">addedge</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v,<span class="keyword">int</span> w)</span></span>&#123;</span><br><span class="line">    e[++et].to=v; e[et].next=head[u]; e[et].w=w; head[u]=et;</span><br><span class="line">    e[++et].to=u; e[et].next=head[v]; e[et].w=w; head[v]=et;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getroot</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> fa,<span class="keyword">int</span> sum)</span></span>&#123;</span><br><span class="line">    siz[x]=<span class="number">1</span>; maxs[x]=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=head[x],to;i;i=e[i].next)&#123;</span><br><span class="line">        to=e[i].to;</span><br><span class="line">        <span class="keyword">if</span>(to==fa || vis[to]) <span class="keyword">continue</span>;</span><br><span class="line">        getroot(to,x,sum);</span><br><span class="line">        siz[x]+=siz[to]; maxs[x]=max(maxs[x],siz[to]);</span><br><span class="line">    &#125;</span><br><span class="line">    maxs[x]=max(maxs[x],sum-siz[x]);</span><br><span class="line">    <span class="keyword">if</span>(maxs[root]&gt;maxs[x]) root=x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">cal</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> fa,<span class="keyword">int</span> l)</span></span>&#123;</span><br><span class="line">    cur.push(l);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++) <span class="keyword">if</span>(l&lt;=q[i] &amp;&amp; w[q[i]-l]) ans[i]=<span class="number">1</span>;</span><br><span class="line">    siz[x]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=head[x],to;i;i=e[i].next)&#123;</span><br><span class="line">        to=e[i].to;</span><br><span class="line">        <span class="keyword">if</span>(to==fa || vis[to]) <span class="keyword">continue</span>;</span><br><span class="line">        cal(to,x,l+e[i].w); siz[x]+=siz[to];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    vis[x]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(!s.empty()) &#123;w[s.top()]=<span class="number">0</span>; s.pop();&#125; w[<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=head[x],to;i;i=e[i].next)&#123;</span><br><span class="line">        to=e[i].to;</span><br><span class="line">        <span class="keyword">if</span>(vis[to]) <span class="keyword">continue</span>;</span><br><span class="line">        cal(to,x,e[i].w);</span><br><span class="line">        <span class="keyword">while</span>(!cur.empty()) &#123;w[cur.top()]=<span class="number">1</span>; s.push(cur.top()); cur.pop();&#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=head[x],to;i;i=e[i].next)&#123;</span><br><span class="line">        to=e[i].to;</span><br><span class="line">        <span class="keyword">if</span>(vis[to]) <span class="keyword">continue</span>;</span><br><span class="line">        root=<span class="number">0</span>; getroot(to,x,siz[to]);</span><br><span class="line">        solve(root);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    n=read(); m=read(); maxs[<span class="number">0</span>]=INF;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> u=read(),v=read(),w=read();</span><br><span class="line">        addedge(u,v,w);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++) q[i]=read();</span><br><span class="line">    root=<span class="number">0</span>; getroot(<span class="number">1</span>,<span class="number">0</span>,n);</span><br><span class="line">    solve(root);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++) <span class="built_in">printf</span>(<span class="string">"%s\n"</span>,ans[i]?<span class="string">"AYE"</span>:<span class="string">"NAY"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://www.luogu.org/problemnew/show/P2634" target="_blank" rel="noopener">P2634 [国家集训队]聪聪可可</a></p><p>题目描述</p><p>聪聪和可可是兄弟俩，他们俩经常为了一些琐事打起来，例如家中只剩下最后一根冰棍而两人都想吃、两个人都想玩儿电脑（可是他们家只有一台电脑）……遇到这种问题，一般情况下石头剪刀布就好了，可是他们已经玩儿腻了这种低智商的游戏。</p><p>他们的爸爸快被他们的争吵烦死了，所以他发明了一个新游戏：由爸爸在纸上画n个“点”，并用n-1条“边”把这n个“点”恰好连通（其实这就是一棵树）。并且每条“边”上都有一个数。接下来由聪聪和可可分别随即选一个点（当然他们选点时是看不到这棵树的），如果两个点之间所有边上数的和加起来恰好是3的倍数，则判聪聪赢，否则可可赢。</p><p>聪聪非常爱思考问题，在每次游戏后都会仔细研究这棵树，希望知道对于这张图自己的获胜概率是多少。现请你帮忙求出这个值以验证聪聪的答案是否正确。</p><p>输入输出格式</p><p>输入格式：</p><p>输入的第1行包含1个正整数n。后面n-1行，每行3个整数x、y、w，表示x号点和y号点之间有一条边，上面的数是w。</p><p>输出格式：</p><p>以即约分数形式输出这个概率（即“a/b”的形式，其中a和b必须互质。如果概率为1，输出“1/1”）。</p><p>输入输出样例</p><p>输入样例#1： </p><p>5</p><p>1 2 1</p><p>1 3 2</p><p>1 4 1</p><p>2 5 3</p><p>输出样例#1： </p><p>13/25</p><p>说明</p><p>【样例说明】</p><p>13组点对分别是(1,1) (2,2) (2,3) (2,5) (3,2) (3,3) (3,4) (3,5) (4,3) (4,4) (5,2) (5,3) (5,5)。</p><p>【数据规模】</p><p>对于100%的数据，n&lt;=20000。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">edge</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> x;</span><br><span class="line">    <span class="keyword">int</span> y;</span><br><span class="line">    <span class="keyword">int</span> z;</span><br><span class="line">    <span class="keyword">int</span> nex;</span><br><span class="line">&#125;e[<span class="number">40005</span>];</span><br><span class="line"><span class="built_in">stack</span>&lt;<span class="keyword">int</span>&gt;s,cur;</span><br><span class="line"><span class="keyword">int</span> head[<span class="number">20005</span>],ans,rt,cnt,cnt2[<span class="number">3</span>],siz[<span class="number">20005</span>],maxnv[<span class="number">20005</span>],sum;</span><br><span class="line"><span class="keyword">bool</span> vis[<span class="number">20005</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">gcd</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(b==<span class="number">0</span>)<span class="keyword">return</span> a;</span><br><span class="line">    <span class="keyword">return</span> gcd(b,a%b);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">adde</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b,<span class="keyword">int</span> c)</span></span>&#123;</span><br><span class="line">    e[cnt].x=a;</span><br><span class="line">    e[cnt].y=b;</span><br><span class="line">    e[cnt].z=c;</span><br><span class="line">    e[cnt].nex=head[a];</span><br><span class="line">    head[a]=cnt++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getrt</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> fa)</span></span>&#123;</span><br><span class="line">    siz[u]=<span class="number">1</span>;maxnv[u]=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=head[u];i!=<span class="number">-1</span>;i=e[i].nex)&#123;</span><br><span class="line">        <span class="keyword">int</span> v=e[i].y;</span><br><span class="line">        <span class="keyword">if</span>(vis[v]||v==fa)<span class="keyword">continue</span>;</span><br><span class="line">        getrt(v,u);</span><br><span class="line">        siz[u]+=siz[v];</span><br><span class="line">        maxnv[u]=max(maxnv[u],siz[v]);</span><br><span class="line">    &#125;</span><br><span class="line">    maxnv[u]=max(maxnv[u],sum-siz[u]);</span><br><span class="line">    <span class="keyword">if</span>(maxnv[u]&lt;maxnv[rt])rt=u;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">cal</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> val,<span class="keyword">int</span> fa)</span></span>&#123;</span><br><span class="line">    cur.push(val%<span class="number">3</span>);ans+=cnt2[(<span class="number">3</span>-(val%<span class="number">3</span>))%<span class="number">3</span>];<span class="comment">//cout&lt;&lt;(3-(val%3))%3&lt;&lt;endl;</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=head[u];i!=<span class="number">-1</span>;i=e[i].nex)&#123;</span><br><span class="line">        <span class="keyword">int</span> v=e[i].y;</span><br><span class="line">        <span class="keyword">if</span>(vis[v]||v==fa)<span class="keyword">continue</span>;</span><br><span class="line">        cal(v,e[i].z+val,u);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">(<span class="keyword">int</span> u)</span></span>&#123;</span><br><span class="line">    vis[u]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(!s.empty())&#123;cnt2[s.top()]=<span class="number">0</span>;s.pop();&#125;cnt2[<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=head[u];i!=<span class="number">-1</span>;i=e[i].nex)&#123;</span><br><span class="line">        <span class="keyword">int</span> v=e[i].y;</span><br><span class="line">        <span class="keyword">if</span>(vis[v])<span class="keyword">continue</span>;</span><br><span class="line">        cal(v,e[i].z,u);</span><br><span class="line">        <span class="keyword">while</span>(!cur.empty())&#123;cnt2[cur.top()]++;s.push(cur.top());cur.pop();&#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=head[u];i!=<span class="number">-1</span>;i=e[i].nex)&#123;</span><br><span class="line">        <span class="keyword">int</span> v=e[i].y;</span><br><span class="line">        <span class="keyword">if</span>(vis[v])<span class="keyword">continue</span>;</span><br><span class="line">        sum=siz[v];</span><br><span class="line">        rt=<span class="number">0</span>;</span><br><span class="line">        getrt(v,u);</span><br><span class="line">        solve(rt);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">memset</span>(head,<span class="number">-1</span>,<span class="keyword">sizeof</span>(head));</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;i++)&#123;<span class="keyword">int</span> a,b,c;<span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;a,&amp;b,&amp;c);adde(a,b,c);adde(b,a,c);&#125;</span><br><span class="line">    sum=n;</span><br><span class="line">    rt=<span class="number">0</span>;</span><br><span class="line">    maxnv[<span class="number">0</span>]=<span class="number">0x3f3f3f3f</span>;</span><br><span class="line">    getrt(<span class="number">1</span>,<span class="number">0</span>);</span><br><span class="line">    solve(rt);</span><br><span class="line">    <span class="keyword">int</span> x=gcd(ans*<span class="number">2</span>+n,(n*(n)));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d/%d\n"</span>,(ans*<span class="number">2</span>+n)/x,(n*(n))/x);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;两道点分治的板子题&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.luogu.org/problemnew/show/P3806&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;P3806 【模板】点分治1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;题目描述&lt;/p&gt;

      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>BZOJ1001</title>
    <link href="http://yoursite.com/2018/12/27/BZOJ1001/"/>
    <id>http://yoursite.com/2018/12/27/BZOJ1001/</id>
    <published>2018-12-27T13:45:36.000Z</published>
    <updated>2019-02-03T02:31:39.136Z</updated>
    
    <content type="html"><![CDATA[<p>1001: [BeiJing2006]狼抓兔子</p><p>Time Limit: 15 Sec  Memory Limit: 162 MB</p><p>Description</p><p>现在小朋友们最喜欢的”喜羊羊与灰太狼”,话说灰太狼抓羊不到，但抓兔子还是比较在行的，</p><p>而且现在的兔子还比较笨，它们只有两个窝，现在你做为狼王，面对下面这样一个网格的地形：</p><p> <img src="https://www.lydsy.com/JudgeOnline/images/1001.jpg" alt="Alt text"></p><p>左上角点为(1,1),右下角点为(N,M)(上图中N=4,M=5).有以下三种类型的道路 </p><p>1:(x,y)&lt;==&gt;(x+1,y) </p><p>2:(x,y)&lt;==&gt;(x,y+1) </p><p>3:(x,y)&lt;==&gt;(x+1,y+1) </p><p>道路上的权值表示这条路上最多能够通过的兔子数，道路是无向的. 左上角和右下角为兔子的两个窝，<br>开始时所有的兔子都聚集在左上角(1,1)的窝里，现在它们要跑到右下解(N,M)的窝中去，狼王开始伏击<br>这些兔子.当然为了保险起见，如果一条道路上最多通过的兔子数为K，狼王需要安排同样数量的K只狼，<br>才能完全封锁这条道路，你需要帮助狼王安排一个伏击方案，使得在将兔子一网打尽的前提下，参与的<br>狼的数量要最小。因为狼还要去找喜羊羊麻烦.</p><p>Input</p><p>第一行为N,M.表示网格的大小，N,M均小于等于1000.</p><p>接下来分三部分</p><p>第一部分共N行，每行M-1个数，表示横向道路的权值. </p><p>第二部分共N-1行，每行M个数，表示纵向道路的权值. </p><p>第三部分共N-1行，每行M-1个数，表示斜向道路的权值. </p><p>输入文件保证不超过10M</p><p>Output</p><p>输出一个整数，表示参与伏击的狼的最小数量.</p><p>Sample Input</p><p>3 4</p><p>5 6 4</p><p>4 3 1</p><p>7 5 3</p><p>5 6 7 8</p><p>8 7 6 5</p><p>5 5 5</p><p>6 6 6</p><p>Sample Output</p><p>14 </p><p>题目大意：求网格图的最大流。</p><p>题解：最大流=最小割，而平面图的最小割可以把原图转化为对偶图，然后利用最短路解决。注意前提必须是平面图。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**************************************************************</span></span><br><span class="line"><span class="comment">    Problem: 1001</span></span><br><span class="line"><span class="comment">    User: MekakuCityActors</span></span><br><span class="line"><span class="comment">    Language: C++</span></span><br><span class="line"><span class="comment">    Result: Accepted</span></span><br><span class="line"><span class="comment">    Time:940 ms</span></span><br><span class="line"><span class="comment">    Memory:143480 kb</span></span><br><span class="line"><span class="comment">****************************************************************/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bitset&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">edge</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> x;</span><br><span class="line">    <span class="keyword">int</span> y;</span><br><span class="line">    <span class="keyword">int</span> val;</span><br><span class="line">    <span class="keyword">int</span> nex;</span><br><span class="line">&#125;e[<span class="number">6000005</span>];</span><br><span class="line"><span class="keyword">int</span> cnt,head[<span class="number">6200005</span>],dist[<span class="number">6200005</span>],n,m;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">adde</span><span class="params">(<span class="keyword">int</span> X,<span class="keyword">int</span> Y,<span class="keyword">int</span> Z)</span></span>&#123;</span><br><span class="line">    e[cnt].x=X;</span><br><span class="line">    e[cnt].y=Y;</span><br><span class="line">    e[cnt].val=Z;</span><br><span class="line">    e[cnt].nex=head[X];</span><br><span class="line">    head[X]=cnt++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">pot</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> x;</span><br><span class="line">    <span class="keyword">int</span> val;</span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span>&lt;(<span class="keyword">const</span> struct pot &amp;aa)<span class="keyword">const</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> val&gt;aa.val;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dij</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(dist,<span class="number">0x3f3f3f3f</span>,<span class="keyword">sizeof</span>(dist));</span><br><span class="line">    dist[<span class="number">1</span>]=<span class="number">0</span>;</span><br><span class="line">    priority_queue&lt;<span class="class"><span class="keyword">struct</span> <span class="title">pot</span>&gt;<span class="title">pq</span>;</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">pot</span> <span class="title">p0</span>;</span></span><br><span class="line">    p0.x=<span class="number">1</span>;</span><br><span class="line">    p0.val=<span class="number">0</span>;</span><br><span class="line">    pq.push(p0);</span><br><span class="line">    <span class="keyword">while</span>(!pq.empty())&#123;</span><br><span class="line">        <span class="class"><span class="keyword">struct</span> <span class="title">pot</span> <span class="title">b0</span>=<span class="title">pq</span>.<span class="title">top</span>();</span>pq.pop();</span><br><span class="line">        <span class="keyword">if</span>(b0.x==<span class="number">2</span>*(n<span class="number">-1</span>)*(m<span class="number">-1</span>)+<span class="number">2</span>)<span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">if</span>(dist[b0.x]&lt;b0.val)<span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=head[b0.x];i!=<span class="number">-1</span>;i=e[i].nex)&#123;</span><br><span class="line">            <span class="keyword">int</span> v=e[i].y;</span><br><span class="line">            <span class="keyword">if</span>(dist[v]&gt;dist[b0.x]+e[i].val)&#123;</span><br><span class="line">                dist[v]=dist[b0.x]+e[i].val;</span><br><span class="line">                <span class="class"><span class="keyword">struct</span> <span class="title">pot</span> <span class="title">c0</span>;</span></span><br><span class="line">                c0.x=v;</span><br><span class="line">                c0.val=dist[v];</span><br><span class="line">                pq.push(c0);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">   <span class="comment">//freopen("in.txt","r",stdin);</span></span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    <span class="built_in">memset</span>(head,<span class="number">-1</span>,<span class="keyword">sizeof</span>(head));</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;m<span class="number">-1</span>;j++)&#123;</span><br><span class="line">            <span class="keyword">int</span> a;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a);</span><br><span class="line">            <span class="keyword">int</span> x=<span class="number">2</span>*(n<span class="number">-1</span>)*(m<span class="number">-1</span>)+<span class="number">2</span><span class="number">-2</span>*(m<span class="number">-1</span>)*i+j*<span class="number">2</span>;</span><br><span class="line">            <span class="keyword">if</span>(i==<span class="number">0</span>)x=<span class="number">2</span>*(n<span class="number">-1</span>)*(m<span class="number">-1</span>)+<span class="number">2</span>;</span><br><span class="line">            <span class="keyword">int</span> y=<span class="number">2</span>*(n<span class="number">-1</span>)*(m<span class="number">-1</span>)+<span class="number">2</span><span class="number">-2</span>*(m<span class="number">-1</span>)*i+j*<span class="number">2</span><span class="number">-2</span>*m+<span class="number">3</span>;</span><br><span class="line">            <span class="keyword">if</span>(i==n<span class="number">-1</span>)y=<span class="number">1</span>;</span><br><span class="line">            adde(x,y,a);</span><br><span class="line">            adde(y,x,a);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n<span class="number">-1</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;m;j++)&#123;</span><br><span class="line">            <span class="keyword">int</span> a;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a);</span><br><span class="line">            <span class="keyword">int</span> x=<span class="number">2</span>*(n<span class="number">-1</span>)*(m<span class="number">-1</span>)+<span class="number">2</span><span class="number">-2</span>*(m<span class="number">-1</span>)*i+j*<span class="number">2</span>;</span><br><span class="line">            <span class="keyword">if</span>(j==m<span class="number">-1</span>)x=<span class="number">2</span>*(n<span class="number">-1</span>)*(m<span class="number">-1</span>)+<span class="number">2</span>;</span><br><span class="line">            <span class="keyword">int</span> y=<span class="number">2</span>*(n<span class="number">-1</span>)*(m<span class="number">-1</span>)+<span class="number">2</span><span class="number">-2</span>*(m<span class="number">-1</span>)*i+j*<span class="number">2</span><span class="number">-1</span>;</span><br><span class="line">            <span class="keyword">if</span>(j==<span class="number">0</span>)y=<span class="number">1</span>;</span><br><span class="line">            adde(x,y,a);</span><br><span class="line">            adde(y,x,a);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n<span class="number">-1</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;m<span class="number">-1</span>;j++)&#123;</span><br><span class="line">            <span class="keyword">int</span> a;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a);</span><br><span class="line">            <span class="keyword">int</span> x=<span class="number">2</span>*(n<span class="number">-1</span>)*(m<span class="number">-1</span>)+<span class="number">2</span><span class="number">-2</span>*(m<span class="number">-1</span>)*i+j*<span class="number">2</span>;</span><br><span class="line">            <span class="keyword">int</span> y=x+<span class="number">1</span>;</span><br><span class="line">            adde(x,y,a);</span><br><span class="line">            adde(y,x,a);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(n==<span class="number">1</span>&amp;&amp;m==<span class="number">1</span>)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"0\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        dij();</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,dist[<span class="number">2</span>*(n<span class="number">-1</span>)*(m<span class="number">-1</span>)+<span class="number">2</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;1001: [BeiJing2006]狼抓兔子&lt;/p&gt;
&lt;p&gt;Time Limit: 15 Sec  Memory Limit: 162 MB&lt;/p&gt;
&lt;p&gt;Description&lt;/p&gt;
&lt;p&gt;现在小朋友们最喜欢的”喜羊羊与灰太狼”,话说灰太狼抓羊不到，但抓兔子还是比较在
      
    
    </summary>
    
    
  </entry>
  
</feed>
